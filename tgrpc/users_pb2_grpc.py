# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tgrpc.users_pb2 as users__pb2


class UsersServiceStub(object):
    """Сервис предназначен для получения: </br> **1**.
    списка счетов пользователя; </br> **2**. маржинальных показателе по счёту.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccounts = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.UsersService/GetAccounts',
                request_serializer=users__pb2.GetAccountsRequest.SerializeToString,
                response_deserializer=users__pb2.GetAccountsResponse.FromString,
                )
        self.GetMarginAttributes = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.UsersService/GetMarginAttributes',
                request_serializer=users__pb2.GetMarginAttributesRequest.SerializeToString,
                response_deserializer=users__pb2.GetMarginAttributesResponse.FromString,
                )
        self.GetUserTariff = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.UsersService/GetUserTariff',
                request_serializer=users__pb2.GetUserTariffRequest.SerializeToString,
                response_deserializer=users__pb2.GetUserTariffResponse.FromString,
                )
        self.GetInfo = channel.unary_unary(
                '/tinkoff.public.invest.api.contract.v1.UsersService/GetInfo',
                request_serializer=users__pb2.GetInfoRequest.SerializeToString,
                response_deserializer=users__pb2.GetInfoResponse.FromString,
                )


class UsersServiceServicer(object):
    """Сервис предназначен для получения: </br> **1**.
    списка счетов пользователя; </br> **2**. маржинальных показателе по счёту.
    """

    def GetAccounts(self, request, context):
        """Метод получения счетов пользователя.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarginAttributes(self, request, context):
        """Расчёт маржинальных показателей по счёту.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserTariff(self, request, context):
        """Запрос тарифа пользователя.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInfo(self, request, context):
        """Метод получения информации о пользователе.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccounts,
                    request_deserializer=users__pb2.GetAccountsRequest.FromString,
                    response_serializer=users__pb2.GetAccountsResponse.SerializeToString,
            ),
            'GetMarginAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarginAttributes,
                    request_deserializer=users__pb2.GetMarginAttributesRequest.FromString,
                    response_serializer=users__pb2.GetMarginAttributesResponse.SerializeToString,
            ),
            'GetUserTariff': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserTariff,
                    request_deserializer=users__pb2.GetUserTariffRequest.FromString,
                    response_serializer=users__pb2.GetUserTariffResponse.SerializeToString,
            ),
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=users__pb2.GetInfoRequest.FromString,
                    response_serializer=users__pb2.GetInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tinkoff.public.invest.api.contract.v1.UsersService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UsersService(object):
    """Сервис предназначен для получения: </br> **1**.
    списка счетов пользователя; </br> **2**. маржинальных показателе по счёту.
    """

    @staticmethod
    def GetAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tinkoff.public.invest.api.contract.v1.UsersService/GetAccounts',
            users__pb2.GetAccountsRequest.SerializeToString,
            users__pb2.GetAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarginAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tinkoff.public.invest.api.contract.v1.UsersService/GetMarginAttributes',
            users__pb2.GetMarginAttributesRequest.SerializeToString,
            users__pb2.GetMarginAttributesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserTariff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tinkoff.public.invest.api.contract.v1.UsersService/GetUserTariff',
            users__pb2.GetUserTariffRequest.SerializeToString,
            users__pb2.GetUserTariffResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tinkoff.public.invest.api.contract.v1.UsersService/GetInfo',
            users__pb2.GetInfoRequest.SerializeToString,
            users__pb2.GetInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
